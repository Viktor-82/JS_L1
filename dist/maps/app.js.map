{"version":3,"sources":["script.js"],"names":[],"mappingsfile":"../app.js","sourcesContent":["'use strict';\r\n\r\n/* Замена картинок.\r\nсодержит images.\r\nЗадание. Сделайте чтобы в src была картинка 2.jpg, для этого:\r\n1. Найдите картинку, например с помощью querySelector\r\n2. Измените атрибут src, например с помощью setAttribute */\r\n    let img = document.querySelector('img');\r\n    img.setAttribute('src', 'images/change_img/2.jpg');\r\n\r\n/* Карточки товаров.\r\nсодержить style. images.\r\nЗадание.\r\n1. Сделайте всем элементам .product какой-нибудь фон, для этого:\r\n    1.1 Найдите все элементы с классом .product, например с помощью\r\n    querySelectorAll\r\n    1.2 Затем переберите эту коллекцию, например с помощью forEach,\r\n    у коллбэк-функции, передаваемой в forEach определите параметр,\r\n    назовите его например product\r\n    1.3 Чтобы менять стили обратитесь к параметру product и его свойству\r\n    style\r\n\r\n2. Сделайте элементам .productName размер шрифта 24px, для этого:\r\n    2.1 Найдите все элементы с классом .productName, например с помощью\r\n    querySelectorAll\r\n    2.2 Затем переберите эту коллекцию, например с помощью forEach,\r\n    у коллбэк-функции, передаваемой в forEach определите параметр,\r\n    назовите его например name\r\n    2.3 Чтобы менять стили обратитесь к параметру name и его свойству\r\n    style */\r\n    let products = document.querySelectorAll('.product');\r\n    products.forEach(function(product) {\r\n        product.style.background = 'lightgreen';\r\n    });\r\n\r\n    let productNames = document.querySelectorAll('.productName');\r\n    productNames.forEach(function(productName) {\r\n        productName.style.fontSize = '24px';\r\n    });\r\n\r\n/* Стили.\r\nЗадание. Найдите все дивы и добавьте им padding: 10px, для этого:\r\n1. Найдите все дивы, например с помощью getElementsByTagName.\r\n2. Затем с помощью цикла пройдитесь по этой коллекции, и обращаясь к\r\nкаждому элементу, обратитесь к его свойству style, а затем к свойству\r\npadding. */\r\n    let divs = document.getElementsByTagName('div');\r\n    for (let i = 0; i < divs.length; i++) {\r\n        divs[i].style.padding = '10px';\r\n    }\r\n\r\n    /* Отложенный вызов.\r\n Задание. Вызовите функцию setTimeout и ей в качестве аргументов передайте:\r\n        1-аргумент. (это уже сделано) анонимную функцию, которая будет вызвана\r\n        через определенный промежуток времени\r\n        2-аргумент. задержку в милисекундах, которая будет равняться 3 секундам\r\n\r\n        Сделайте чтобы в анонимной функции вызывалась функция alert со строкой\r\n        \"message\". Задание. Вызовите функцию setTimeout и ей в качестве аргументов передайте:\r\n        1-аргумент. (это уже сделано) анонимную функцию, которая будет вызвана\r\n        через определенный промежуток времени\r\n        2-аргумент. задержку в милисекундах, которая будет равняться 3 секундам\r\n\r\n        Сделайте чтобы в анонимной функции вызывалась функция alert со строкой\r\n        \"message\". */\r\n    setTimeout(function() {\r\n        alert('message');\r\n    }, 3000 ); // здесь сделана задержка 3 сек.\r\n\r\n/* Добавить отступы.\r\nЗадание. Сделайте, чтобы у всех инпутов снизу был внешний отступ (margin-bottom).\r\n    1. Получите все инпуты, например с помощью querySelectorAll\r\n    2. Переберите полученную коллекцию например с помощью forEach\r\n        2.1 У функции-обработчика, которая будет передаваться в forEach определите\r\n        параметр input\r\n        2.2 Чтобы менять стили обращайтесь к свойству style у параметра input */\r\n    let inputs = document.querySelectorAll('input');\r\n    inputs.forEach(function(input) {\r\n        input.style.marginBottom = '10px';\r\n    });\r\n\r\n/* Добавить переносы.\r\nЗадание. Инпуты идут один за другим, надо сделать чтобы после каждого инпута\r\n    появился тег br, чтобы инпуты стали стоять один под другим. Для этого:\r\n    1. Получите все инпуты, например с помощью querySelectorAll.\r\n    2. Переберите их с помощью цикла или forEach, и после каждого инпута\r\n    встявляйте тег br, например с помощью insertAdjacentHTML.Задание. Инпуты идут один за другим, надо сделать чтобы после каждого инпута\r\n    появился тег br, чтобы инпуты стали стоять один под другим. Для этого:\r\n    1. Получите все инпуты, например с помощью querySelectorAll.\r\n    2. Переберите их с помощью цикла или forEach, и после каждого инпута\r\n    встявляйте тег br, например с помощью insertAdjacentHTML. */\r\n    let inputs = document.querySelectorAll('input');\r\n    inputs.forEach(function(input) {\r\n        input.insertAdjacentHTML('afterend', '<br>');\r\n    });\r\n\r\n/* Получение значений из input.\r\nЗадание.\r\n1. Сохраните в переменную ссылку на span, например с помощью querySelector.\r\n2. Сохраните в переменную fromEl ссылку на input, например с помощью getElementById.\r\n3. Элементу fromEl назначьте обработку события change, у функции обработчика\r\nэтого события должен быть параметр event.\r\n4. Читайте что было написано в input'e с помощью event.target.value и пишите это\r\nзначение в span. */\r\n    let span = document.querySelector('span');\r\n    let fromEl = document.querySelector('input');\r\n    fromEl.addEventListener('change', function(event) {\r\n        span.textContent = event.target.value;\r\n    });\r\n\r\n/* Анимация.\r\nСодержит style. + внешние стили\r\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.0.0/animate.min.css\">\r\nЗадание.\r\n1. Сохраните в переменную btn ссылку на кнопку.\r\n2. Сохраните в переменную msg ссылку на .message.\r\n3. На btn назначьте обработку клика.\r\n    3.1 Внутри функции-обработчика сделайте чтобы у msg display становился block.\r\n    3.2 Для msg с помощью classList.add() добавьте классы animate__animated и\r\n    animate__fadeInLeftBig */\r\n    let btn = document.querySelector('button');\r\n    let msg = document.querySelector('.message');\r\n    btn.addEventListener('click', function() {\r\n        msg.style.display = 'block';\r\n        msg.classList.add('animate__animated', 'animate__fadeInLeftBig');\r\n    });\r\n\r\n    /* rating.\r\nсодержит style. + внешние стили\r\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.14.0/css/all.min.css\" integrity=\r\n\"sha512-1PKOgIY59xJ8Co8+NE6FZ+LOAZKjy+KY8iq0G4B3CyeY6wYHN3yt9PW0XpSriVlkMXe40PTKnXrLnZ9+fkDaog==\" crossorigin=\"anonymous\" /> \r\nЗадание. Используя заготовку, сделайте чтобы при наведении на вторую звезду\r\nподсвечивались первая и вторая звезды. При наведени на третью звезду подсвечивались\r\nпервая, вторая и третья звезды, и т.д.\r\nmouseover - это событие срабатывает когда мы наводим на элемент.\r\nmouseout - это событие срабатывает когда мы перестаем наводить на элемент. */\r\n    let iElems = document.querySelectorAll('i');\r\n    iElems.forEach(function(i) {\r\n        i.addEventListener('mouseover', function(event) {\r\n            addGoldenClass(event.target);\r\n        });\r\n        i.addEventListener('mouseout', function(event) {\r\n            removeGoldenClass(event.target);\r\n        });\r\n    })\r\n\r\n    function addGoldenClass(i) {\r\n        i.classList.add('golden');\r\n        let previousElem = i.previousElementSibling;\r\n        if (previousElem !== null && previousElem.tagName === 'I') {\r\n            return addGoldenClass(previousElem);\r\n        }\r\n    }\r\n\r\n    function removeGoldenClass(i) {\r\n        i.classList.remove('golden');\r\n        let previousElem = i.previousElementSibling;\r\n        if (previousElem !== null && previousElem.tagName === 'I') {\r\n            return removeGoldenClass(previousElem);\r\n        }\r\n    }\r\n\r\n/* Удаление блока по клику.\r\nСодержит внешние стили\r\n<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\"\r\n        integrity=\"sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z\" crossorigin=\"anonymous\">\r\n    Задание. Надо сделать, чтобы по клику на крестик исчезало тот блок\r\nс сообщением, в котором этот крестик находится. Для этого:\r\n1. Получите все кнопки, например с помощью querySelectorAll\r\n2. Переберите полученную коллекцию, например с помощью forEach\r\n2.1 Методу forEach передавайте callback-функцию с параметром button\r\n3. Каждому button назначьте обработчик клика, с помощью addEventListener,\r\nа самим обработчиком клика будет функция closeClickHandler (в коде ниже)\r\n4. В функции closeClickHandler из объекта события event обратитесь\r\nк currentTarget, затем обратитесь к родительскому узлу, затем к свойству\r\nstyle, наконец сделайте display: none */\r\n    let buttons = document.querySelectorAll('button');\r\n    buttons.forEach(function(button) {\r\n        button.addEventListener('click', closeClickHandler);\r\n    });\r\n\r\n    function closeClickHandler(event) {\r\n        event.currentTarget.parentNode.style.display = 'none';\r\n    }\r\n\r\n/* Добавление в корзину.\r\nСодержит style. images. \r\nЗадание. Нужно чтобы при клике по кнопке блок .product в котором она\r\nнаходится становился цвета lightgreen, а текст на кнопке стал \"Добавлено\",\r\nдля этого:\r\n1. Найдите все кнопки, например с помощью querySelectorAll\r\n2. Переберите полученную коллекцию кнопок, например с помощью forEach,\r\nи каждой кнопке назначьте в качестве обработчика клика фукнцию\r\nbuttonClickHandler (увидите ее ниже в коде)\r\n3. Когда функция buttonClickHandler будет срабатывать вы из объекта\r\nсобытия получаете элемент на котором произошло событие (свойство target),\r\nзатем получаете родителя кнопки по коротой кликнули (свойство parentNode),\r\nзатем обращаетесь к свойству style, а затем к свойству background и\r\nставите цвет lightgreen.\r\n3.1 Также во время срабатывания функции buttonClickHandler из обекта\r\nсобытия (параметр event) вы получаете кнопку на которой произошло\r\nсобытие (свойство target) и меняете у нее текст на \"Добавлено\". */\r\n    let buttons = document.querySelectorAll('button');\r\n    buttons.forEach(function(button) {\r\n        button.addEventListener('click', buttonClickHandler);\r\n    });\r\n\r\n    function buttonClickHandler(event) {\r\n        event.target.parentNode.style.background = 'lightgreen';\r\n        event.target.textContent = 'Добавлено';\r\n    }\r\n\r\n/* Валидация формы.\r\nСодержит style.\r\nЗадание. Вам нужно проверять пусто ли в input'ах при отправке формы.\r\n    Если в инпуте пусто делаете ему красную рамку. Если хотя бы в одном\r\n    инпуте пусто форма не должна отправляться.\r\n    1. сохраните в переменную formEl ссылку на форму\r\n    2. сохраните в переменную ссылку на input#first\r\n    3. сохраните в переменную ссылку на input#second\r\n    4. на formEl назначьте обработку события отправки формы (submit),\r\n    у функции-обработчика объявите параметр event.\r\n        4.1 в функции-обработчике вы проверяете пусты ли input'ы, для этого\r\n        читайте у них свойство value\r\n        4.2 если input пустой тогда вы обращаетесь к его style.borderColor\r\n        и делаете его равным red\r\n        4.3 чтобы остановить отправку формы используйте event.preventDefault() */\r\n    let formEl = document.querySelector('form');\r\n    let firstInput = document.getElementById('first');\r\n    let secondInput = document.getElementById('second');\r\n\r\n    formEl.addEventListener('submit', function(event) {\r\n        let firstInputEmpty = firstInput.value === '';\r\n        let secondInputEmpty = secondInput.value === '';\r\n\r\n        if (firstInputEmpty) {\r\n            firstInput.style.borderColor = 'red';\r\n        }\r\n        if (secondInputEmpty) {\r\n            secondInput.style.borderColor = 'red';\r\n        }\r\n        if (firstInputEmpty || secondInputEmpty) {\r\n            event.preventDefault();\r\n        }\r\n    });\r\n\r\n/* Кнопка наверх.\r\nСодержит style.\r\nЗадание. Сделайте, чтобы при прокрутке от верха экрана больше чем на 500px появлялся\r\nблок #goToTop, а если меньше, то чтобы исчезал.\r\n1. Сохраните в переменную goToTopEl ссылку на div#goToTop\r\n2. Назначьте обработку события scroll для объекта window.\r\n3. В функции-обработчике проверяйте величину window.pageYOffset если она больше\r\n500, тогда goToTopEl надо показать, иначе скрыть.\r\n4. Показывайте и скрывайте с помощью свойства display у объекта style. */\r\n    let goToTopEl = document.getElementById('goToTop');\r\n    window.addEventListener('scroll', function() {\r\n        if (window.pageYOffset > 500) {\r\n            goToTopEl.style.display = 'block';\r\n        } else {\r\n            goToTopEl.style.display = 'none';\r\n        }\r\n    });\r\n\r\n/* Имитация загрузки картинки.\r\nСодержит style. images.\r\nЗадание. Нужно через 3 секунды заменить все картинки loading.gif на картинки\r\nиз папки images.\r\n1. Получите все картинки например с помощью querySelectorAll\r\n2. Переберите эту коллекцию с помощью цикла for, в цикле каждой картинке\r\nустановите атрибут src (например с помощью setAttribute) равный\r\n\"images/здесь_нужно_поставить_правильное_имя_файла\".\r\n3. Наконец весь код оберните в setTimeout, и выставите задержку 3 сек. */\r\n    setTimeout(function () {\r\n        let images = document.querySelectorAll('img');\r\n        for (let i = 0; i < images.length; i++) {\r\n            images[i].setAttribute('src', `images/load_images/${i + 1}.jpg`);\r\n        }\r\n    }, 3000); // так прописывается задержка загрузки"]}